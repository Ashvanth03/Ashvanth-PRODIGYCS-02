from PIL import Image
def encrypt_image(input_path, output_path):
# Open the image file
with Image.open(input_path) as img:
# Convert the image to RGB if it's not already in RGB mode
img = img.convert('RGB')
# Load image data
pixels = img.load()
# Get image dimensions
width, height = img.size
# Perform pixel manipulation (swap red and blue channels)
for y in range(height):
for x in range(width):
r, g, b = pixels[x, y]
# Swap red and blue channels
pixels[x, y] = (b, g, r)
# Save the encrypted image
img.save(output_path)
print(f'Image encrypted and saved to {output_path}')
def decrypt_image(input_path, output_path):
# Open the encrypted image file
with Image.open(input_path) as img:
# Convert the image to RGB if it's not already in RGB mode
img = img.convert('RGB')
# Load image data
pixels = img.load()
# Get image dimensions
width, height = img.size
# Perform pixel manipulation (swap red and blue channels back)
for y in range(height):
for x in range(width):
r, g, b = pixels[x, y]
# Swap red and blue channels back
pixels[x, y] = (b, g, r)
# Save the decrypted image
img.save(output_path)
print(f'Image decrypted and saved to {output_path}')
if __name__ == "__main__":
# Example usage
encrypt_image('input_image.jpg', 'encrypted_image.jpg')
decrypt_image('encrypted_image.jpg', 'decrypted_image.jpg')
